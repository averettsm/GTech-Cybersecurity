root@a60a27106eba:/etc/ansible# cat install-elk.yml
---
- name: Configure DVWA Web VM
  hosts: webservers
  become: true
  tasks:
  - name: install docker.io
    apt:
      force_apt_get: yes
      update_cache: yes
      name: docker.io
      state: present
  - name: install pip3
    apt:
      name: python3-pip
      state: present
  - name: install Python Docker Module
    pip:
      name: docker
      state: present
  - name: download and launch a docker web container
    docker_container:
      name: dvwa
      image: cyberxsecurity/dvwa
      state: started
      restart_policy: always
      published_ports: 80:80
  - name: Enable docker service
    systemd:
      name: docker
      enabled: yes
- name: Configure ELK
  hosts: elk
  remote_user: azadmin
  become: true
  tasks:
  - name: install docker.io
    apt:
      force_apt_get: yes
      update_cache: yes
      name: docker.io
      state: present
  - name: install pip3
    apt:
      name: python3-pip
      state: present
  - name: install Python Docker Module
    pip:
      name: docker
      state: present
  - name: Increase Virtual Memory
    command: sysctl -w vm.max_map_count=262144
  - name: use more Memory
    sysctl:
      name: vm.max_map_count
      value: "262144"
      state: present
      reload: yes
  - name: download and launch ELK container
    docker_container:
      name: elk
      image: sebp/elk:761
      state: started
      restart_policy: always
      published_ports:
        - 5601:5601
        - 9200:9200
        - 5044:5044
  - name: Enable service docker on boot
    systemd:
      name: docker
      enabled: yes
root@a60a27106eba:/etc/ansible# locate dvwa.yml
bash: locate: command not found
root@a60a27106eba:/etc/ansible# find dvwa.yml
find: 'dvwa.yml': No such file or directory
root@a60a27106eba:/etc/ansible# cat hosts
# This is the default ansible 'hosts' file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the '#' character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

# Ex 1: Ungrouped hosts, specify before any group headers.

## green.example.com
## blue.example.com
## 192.168.100.1
## 192.168.100.10

# Ex 2: A collection of hosts belonging to the 'webservers' group

[webservers]
## alpha.example.org
## beta.example.org
## 192.168.1.100
## 192.168.1.110

10.1.0.6 ansible_python_interpreter=/usr/bin/python3
10.1.0.7 ansible_python_interpreter=/usr/bin/python3
10.1.0.8 ansible_python_interpreter=/usr/bin/python3

[elk]
10.2.0.4 ansible_python_interpreter=/usr/bin/python3


# If you have multiple hosts following a pattern you can specify
# them like this:

## www[001:006].example.com

# Ex 3: A collection of database servers in the 'dbservers' group

## [dbservers]
##
## db01.intranet.mydomain.net
## db02.intranet.mydomain.net
## 10.25.1.56
## 10.25.1.57

# Here's another example of host ranges, this time there are no
# leading 0s:

## db-[99:101]-node.example.com

